version: "3.2"
services:
  # Reverse proxy webserver
  nginx:
    image: nginx
    restart: always
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      # Only nginx will have frontend accessibility
      - frontend
      - backend
    ports:
      # App
      - "8080:80"
      # Admin mongodb
      - "8081:81"
  # Database server
  mongodb:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: weakpassword
      MONGO_INITDB_DATABASE: website
    networks:
      - database
    volumes:
      - data-volume:/data/db
      - ./init-setup.js:/docker-entrypoint-initdb.d/init-setup.js:ro
#  mongodb-seed:
#    image: mongo
#    volumes:
#      - ./default_data.json:/data.json
#    command: mongoimport --host mongodb --port 27017 --username root --password weakpassword --db website --collection Users --type json --file /data.json --jsonArray
#    depends_on:
#      - mongodb
#    networks:
#       - database
  # Node application (access via nginx)
  nodeapp:
    image: node
    restart: always
    command: bash -c "npm install && npm start"
    volumes:
      - ./node:/usr/app
    working_dir: /usr/app
    networks:
      - backend
      - database
  # Database admin panel
  mongodbadmin:
    image: mrvautin/adminmongo
    restart: always
    environment:
      - CONN_NAME=website
      - DB_HOST=mongodb
      - DB_USERNAME=root
      - DB_PASSWORD=weakpassword
      - DB_PORT=27017
      - HOST=0.0.0.0
    links:
      - mongodb
    depends_on:
      - mongodb
    networks:
      - backend
      - database

# Network configuration
networks:
  frontend:
  backend:
  database:

# Volumes for mongodb
volumes:
  data-volume: